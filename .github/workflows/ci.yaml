name: ci-cd

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/hundredx-api

jobs:
  build_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Warnings as messages for noisy CI)
        run: dotnet build --no-restore -c Release /p:TreatWarningsAsErrors=false

      - name: Test
        run: dotnet test --no-build -c Release -v minimal

  build_push_image:
    name: Build & Push Image
    needs: build_test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "sha=${SHA_TAG}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "ref_tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Set tags
        id: tags
        run: |
          TAGS="${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha }},${{ env.IMAGE_NAME }}:latest"
          if [[ -n "${{ steps.meta.outputs.ref_tag }}" ]]; then
            TAGS="$TAGS,${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.ref_tag }}"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: HundredX.API/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}

  deploy_prod:
    name: Deploy to PROD
    needs: build_push_image
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy (docker compose pull & up)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_SSH_PORT || 22 }}
          script: |
            # login to GHCR (PAT with read:packages stored in GHCR_TOKEN)
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

            cd ${{ secrets.PROD_APP_DIR }}  # e.g., /srv/hundredx
            # Optionally pin the tag to the short SHA for atomic deploys:
            TAG=${GITHUB_SHA::7} docker compose pull
            TAG=${GITHUB_SHA::7} docker compose up -d

            # Fallback to latest if you prefer:
            # docker compose pull && docker compose up -d

            docker image prune -f
 
